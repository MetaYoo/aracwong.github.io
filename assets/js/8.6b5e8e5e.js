(window.webpackJsonp=window.webpackJsonp||[]).push([[8],{210:function(v,_,i){"use strict";i.r(_);var l=i(0),a=Object(l.a)({},(function(){var v=this,_=v.$createElement,i=v._self._c||_;return i("ContentSlotsDistributor",{attrs:{"slot-key":v.$parent.slotKey}},[i("h1",{attrs:{id:"基础篇"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#基础篇"}},[v._v("#")]),v._v(" 基础篇")]),v._v(" "),i("h2",{attrs:{id:"基本功"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#基本功"}},[v._v("#")]),v._v(" 基本功")]),v._v(" "),i("ul",[i("li",[v._v("面向对象的特征")]),v._v(" "),i("li",[v._v("final, finally, finalize 的区别")]),v._v(" "),i("li",[v._v("int 和 Integer 有什么区别")]),v._v(" "),i("li",[v._v("重载和重写的区别")]),v._v(" "),i("li",[v._v("抽象类和接口有什么区别")]),v._v(" "),i("li",[v._v("说说反射的用途及实现")]),v._v(" "),i("li",[v._v("说说自定义注解的场景及实现")]),v._v(" "),i("li",[v._v("HTTP 请求的 GET 与 POST 方式的区别")]),v._v(" "),i("li",[v._v("session 与 cookie 区别")]),v._v(" "),i("li",[v._v("session 分布式处理")]),v._v(" "),i("li",[v._v("JDBC 流程")]),v._v(" "),i("li",[v._v("MVC 设计思想")]),v._v(" "),i("li",[v._v("equals 与 == 的区别")])]),v._v(" "),i("h2",{attrs:{id:"集合"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#集合"}},[v._v("#")]),v._v(" 集合")]),v._v(" "),i("ul",[i("li",[v._v("List 和 Set 区别")]),v._v(" "),i("li",[v._v("List 和 Map 区别")]),v._v(" "),i("li",[v._v("Arraylist 与 LinkedList 区别")]),v._v(" "),i("li",[v._v("ArrayList 与 Vector 区别")]),v._v(" "),i("li",[v._v("HashMap 和 Hashtable 的区别")]),v._v(" "),i("li",[v._v("HashSet 和 HashMap 区别")]),v._v(" "),i("li",[v._v("HashMap 和 ConcurrentHashMap 的区别")]),v._v(" "),i("li",[v._v("HashMap 的工作原理及代码实现")]),v._v(" "),i("li",[v._v("ConcurrentHashMap 的工作原理及代码实现")])]),v._v(" "),i("h2",{attrs:{id:"线程"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#线程"}},[v._v("#")]),v._v(" 线程")]),v._v(" "),i("ul",[i("li",[v._v("创建线程的方式及实现")]),v._v(" "),i("li",[v._v("sleep() 、join（）、yield（）有什么区别")]),v._v(" "),i("li",[v._v("说说 CountDownLatch 原理")]),v._v(" "),i("li",[v._v("说说 CyclicBarrier 原理")]),v._v(" "),i("li",[v._v("说说 Semaphore 原理")]),v._v(" "),i("li",[v._v("说说 Exchanger 原理")]),v._v(" "),i("li",[v._v("说说 CountDownLatch 与 CyclicBarrier 区别")]),v._v(" "),i("li",[v._v("ThreadLocal 原理分析")]),v._v(" "),i("li",[v._v("讲讲线程池的实现原理")]),v._v(" "),i("li",[v._v("线程池的几种方式")]),v._v(" "),i("li",[v._v("线程的生命周期")])]),v._v(" "),i("h2",{attrs:{id:"锁机制"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#锁机制"}},[v._v("#")]),v._v(" 锁机制")]),v._v(" "),i("ul",[i("li",[v._v("说说线程安全问题")]),v._v(" "),i("li",[v._v("volatile 实现原理")]),v._v(" "),i("li",[v._v("synchronize 实现原理")]),v._v(" "),i("li",[v._v("synchronized 与 lock 的区别")]),v._v(" "),i("li",[v._v("CAS 乐观锁")]),v._v(" "),i("li",[v._v("ABA 问题")]),v._v(" "),i("li",[v._v("乐观锁的业务场景及实现方式")])]),v._v(" "),i("h1",{attrs:{id:"核心篇"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#核心篇"}},[v._v("#")]),v._v(" 核心篇")]),v._v(" "),i("h2",{attrs:{id:"数据存储"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#数据存储"}},[v._v("#")]),v._v(" 数据存储")]),v._v(" "),i("ul",[i("li",[v._v("MySQL 索引使用的注意事项")]),v._v(" "),i("li",[v._v("说说反模式设计")]),v._v(" "),i("li",[v._v("说说分库与分表设计")]),v._v(" "),i("li",[v._v("分库与分表带来的分布式困境与应对之策")]),v._v(" "),i("li",[v._v("说说 SQL 优化之道")]),v._v(" "),i("li",[v._v("MySQL 遇到的死锁问题")]),v._v(" "),i("li",[v._v("存储引擎的 InnoDB 与 MyISAM")]),v._v(" "),i("li",[v._v("数据库索引的原理")]),v._v(" "),i("li",[v._v("为什么要用 B-tree")]),v._v(" "),i("li",[v._v("聚集索引与非聚集索引的区别")]),v._v(" "),i("li",[v._v("limit 20000 加载很慢怎么解决")]),v._v(" "),i("li",[v._v("选择合适的分布式主键方案")]),v._v(" "),i("li",[v._v("选择合适的数据存储方案")]),v._v(" "),i("li",[v._v("ObjectId 规则")]),v._v(" "),i("li",[v._v("聊聊 MongoDB 使用场景")]),v._v(" "),i("li",[v._v("倒排索引")]),v._v(" "),i("li",[v._v("聊聊 ElasticSearch 使用场景")]),v._v(" "),i("li",[v._v("数据库索引有哪几种")])]),v._v(" "),i("h2",{attrs:{id:"缓存使用"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#缓存使用"}},[v._v("#")]),v._v(" 缓存使用")]),v._v(" "),i("ul",[i("li",[v._v("Redis 有哪些类型")]),v._v(" "),i("li",[v._v("Redis 内部结构")]),v._v(" "),i("li",[v._v("聊聊 Redis 使用场景")]),v._v(" "),i("li",[v._v("Redis 持久化机制")]),v._v(" "),i("li",[v._v("Redis 如何实现持久化")]),v._v(" "),i("li",[v._v("Redis 集群方案与实现")]),v._v(" "),i("li",[v._v("Redis 为什么是单线程的")]),v._v(" "),i("li",[v._v("缓存奔溃")]),v._v(" "),i("li",[v._v("缓存降级")]),v._v(" "),i("li",[v._v("使用缓存的合理性问题")])]),v._v(" "),i("h2",{attrs:{id:"消息队列"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#消息队列"}},[v._v("#")]),v._v(" 消息队列")]),v._v(" "),i("ul",[i("li",[v._v("消息队列的使用场景")]),v._v(" "),i("li",[v._v("消息的重发补偿解决思路")]),v._v(" "),i("li",[v._v("消息的幂等性解决思路")]),v._v(" "),i("li",[v._v("消息的堆积解决思路")]),v._v(" "),i("li",[v._v("自己如何实现消息队列")]),v._v(" "),i("li",[v._v("如何保证消息的有序性")])]),v._v(" "),i("h1",{attrs:{id:"框架篇"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#框架篇"}},[v._v("#")]),v._v(" 框架篇")]),v._v(" "),i("h2",{attrs:{id:"spring"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#spring"}},[v._v("#")]),v._v(" Spring")]),v._v(" "),i("ul",[i("li",[v._v("BeanFactory 和 ApplicationContext 有什么区别")]),v._v(" "),i("li",[v._v("Spring Bean 的生命周期")]),v._v(" "),i("li",[v._v("Spring IOC 如何实现")]),v._v(" "),i("li",[v._v("说说 Spring AOP")]),v._v(" "),i("li",[v._v("Spring AOP 实现原理")]),v._v(" "),i("li",[v._v("动态代理（cglib 与 JDK）")]),v._v(" "),i("li",[v._v("Spring 事务实现方式")]),v._v(" "),i("li",[v._v("Spring 事务底层原理")]),v._v(" "),i("li",[v._v("如何自定义注解实现功能")]),v._v(" "),i("li",[v._v("Spring MVC 运行流程")]),v._v(" "),i("li",[v._v("Spring MVC 启动流程")]),v._v(" "),i("li",[v._v("Spring 的单例实现原理")]),v._v(" "),i("li",[v._v("Spring 框架中用到了哪些设计模式")]),v._v(" "),i("li",[v._v("Spring 其他产品（Srping Boot、Spring Cloud、Spring Secuirity、Spring Data、Spring AMQP 等）")])]),v._v(" "),i("h2",{attrs:{id:"netty"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#netty"}},[v._v("#")]),v._v(" Netty")]),v._v(" "),i("ul",[i("li",[v._v("为什么选择 Netty")]),v._v(" "),i("li",[v._v("说说业务中，Netty 的使用场景")]),v._v(" "),i("li",[v._v("原生的 NIO 在 JDK 1.7 版本存在 epoll bug")]),v._v(" "),i("li",[v._v("什么是TCP 粘包/拆包")]),v._v(" "),i("li",[v._v("TCP粘包/拆包的解决办法")]),v._v(" "),i("li",[v._v("Netty 线程模型")]),v._v(" "),i("li",[v._v("说说 Netty 的零拷贝")]),v._v(" "),i("li",[v._v("Netty 内部执行流程")]),v._v(" "),i("li",[v._v("Netty 重连实现")])]),v._v(" "),i("h1",{attrs:{id:"微服务篇"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#微服务篇"}},[v._v("#")]),v._v(" 微服务篇")]),v._v(" "),i("h2",{attrs:{id:"微服务"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#微服务"}},[v._v("#")]),v._v(" 微服务")]),v._v(" "),i("ul",[i("li",[v._v("前后端分离是如何做的")]),v._v(" "),i("li",[v._v("微服务哪些框架")]),v._v(" "),i("li",[v._v("你怎么理解 RPC 框架")]),v._v(" "),i("li",[v._v("说说 RPC 的实现原理")]),v._v(" "),i("li",[v._v("说说 Dubbo 的实现原理")]),v._v(" "),i("li",[v._v("你怎么理解 RESTful")]),v._v(" "),i("li",[v._v("说说如何设计一个良好的 API")]),v._v(" "),i("li",[v._v("如何理解 RESTful API 的幂等性")]),v._v(" "),i("li",[v._v("如何保证接口的幂等性")]),v._v(" "),i("li",[v._v("说说 CAP 定理、 BASE 理论")]),v._v(" "),i("li",[v._v("怎么考虑数据一致性问题")]),v._v(" "),i("li",[v._v("说说最终一致性的实现方案")]),v._v(" "),i("li",[v._v("你怎么看待微服务")]),v._v(" "),i("li",[v._v("微服务与 SOA 的区别")]),v._v(" "),i("li",[v._v("如何拆分服务")]),v._v(" "),i("li",[v._v("微服务如何进行数据库管理")]),v._v(" "),i("li",[v._v("如何应对微服务的链式调用异常")]),v._v(" "),i("li",[v._v("对于快速追踪与定位问题")]),v._v(" "),i("li",[v._v("微服务的安全")])]),v._v(" "),i("h2",{attrs:{id:"分布式"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#分布式"}},[v._v("#")]),v._v(" 分布式")]),v._v(" "),i("ul",[i("li",[v._v("谈谈业务中使用分布式的场景")]),v._v(" "),i("li",[v._v("Session 分布式方案")]),v._v(" "),i("li",[v._v("分布式锁的场景")]),v._v(" "),i("li",[v._v("分布是锁的实现方案")]),v._v(" "),i("li",[v._v("分布式事务")]),v._v(" "),i("li",[v._v("集群与负载均衡的算法与实现")]),v._v(" "),i("li",[v._v("说说分库与分表设计")]),v._v(" "),i("li",[v._v("分库与分表带来的分布式困境与应对之策")]),v._v(" "),i("li",[v._v("分布式理论中的CAP原理，zookeeper和eureka 分布符合哪几种")])]),v._v(" "),i("h1",{attrs:{id:"安全-性能"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#安全-性能"}},[v._v("#")]),v._v(" 安全&性能")]),v._v(" "),i("h2",{attrs:{id:"安全问题"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#安全问题"}},[v._v("#")]),v._v(" 安全问题")]),v._v(" "),i("ul",[i("li",[v._v("安全要素与 STRIDE 威胁")]),v._v(" "),i("li",[v._v("防范常见的 Web 攻击")]),v._v(" "),i("li",[v._v("服务端通信安全攻防")]),v._v(" "),i("li",[v._v("HTTPS 原理剖析")]),v._v(" "),i("li",[v._v("HTTPS 降级攻击")]),v._v(" "),i("li",[v._v("授权与认证")]),v._v(" "),i("li",[v._v("基于角色的访问控制")]),v._v(" "),i("li",[v._v("基于数据的访问控制")])]),v._v(" "),i("h2",{attrs:{id:"性能优化"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#性能优化"}},[v._v("#")]),v._v(" 性能优化")]),v._v(" "),i("ul",[i("li",[v._v("性能指标有哪些")]),v._v(" "),i("li",[v._v("如何发现性能瓶颈")]),v._v(" "),i("li",[v._v("性能调优的常见手段")]),v._v(" "),i("li",[v._v("说说你在项目中如何进行性能调优")])]),v._v(" "),i("h1",{attrs:{id:"工程篇"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#工程篇"}},[v._v("#")]),v._v(" 工程篇")]),v._v(" "),i("h2",{attrs:{id:"需求分析"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#需求分析"}},[v._v("#")]),v._v(" 需求分析")]),v._v(" "),i("ul",[i("li",[v._v("你如何对需求原型进行理解和拆分")]),v._v(" "),i("li",[v._v("说说你对功能性需求的理解")]),v._v(" "),i("li",[v._v("说说你对非功能性需求的理解")]),v._v(" "),i("li",[v._v("你针对产品提出哪些交互和改进意见")]),v._v(" "),i("li",[v._v("你如何理解用户痛点")])]),v._v(" "),i("h2",{attrs:{id:"设计能力"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#设计能力"}},[v._v("#")]),v._v(" 设计能力")]),v._v(" "),i("ul",[i("li",[v._v("说说你在项目中使用过的 UML 图")]),v._v(" "),i("li",[v._v("你如何考虑组件化")]),v._v(" "),i("li",[v._v("你如何考虑服务化")]),v._v(" "),i("li",[v._v("你如何进行领域建模")]),v._v(" "),i("li",[v._v("你如何划分领域边界")]),v._v(" "),i("li",[v._v("说说你项目中的领域建模")]),v._v(" "),i("li",[v._v("说说概要设计")])]),v._v(" "),i("h2",{attrs:{id:"设计模式"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#设计模式"}},[v._v("#")]),v._v(" 设计模式")]),v._v(" "),i("ul",[i("li",[v._v("你项目中有使用哪些设计模式")]),v._v(" "),i("li",[v._v("说说常用开源框架中设计模式使用分析")]),v._v(" "),i("li",[v._v("说说你对设计原则的理解")]),v._v(" "),i("li",[v._v("23种设计模式的设计理念")]),v._v(" "),i("li",[v._v("设计模式之间的异同，例如策略模式与状态模式的区别")]),v._v(" "),i("li",[v._v("设计模式之间的结合，例如策略模式+简单工厂模式的实践")]),v._v(" "),i("li",[v._v("设计模式的性能，例如单例模式哪种性能更好。")])]),v._v(" "),i("h2",{attrs:{id:"业务工程"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#业务工程"}},[v._v("#")]),v._v(" 业务工程")]),v._v(" "),i("ul",[i("li",[v._v("你系统中的前后端分离是如何做的")]),v._v(" "),i("li",[v._v("说说你的开发流程")]),v._v(" "),i("li",[v._v("你和团队是如何沟通的")]),v._v(" "),i("li",[v._v("你如何进行代码评审")]),v._v(" "),i("li",[v._v("说说你对技术与业务的理解")]),v._v(" "),i("li",[v._v("说说你在项目中经常遇到的 Exception")]),v._v(" "),i("li",[v._v("说说你在项目中遇到感觉最难Bug，怎么解决的")]),v._v(" "),i("li",[v._v("说说你在项目中遇到印象最深困难，怎么解决的")]),v._v(" "),i("li",[v._v("你觉得你们项目还有哪些不足的地方")]),v._v(" "),i("li",[v._v("你是否遇到过 CPU 100% ，如何排查与解决")]),v._v(" "),i("li",[v._v("你是否遇到过 内存 OOM ，如何排查与解决")]),v._v(" "),i("li",[v._v("说说你对敏捷开发的实践")]),v._v(" "),i("li",[v._v("说说你对开发运维的实践")]),v._v(" "),i("li",[v._v("介绍下工作中的一个对自己最有价值的项目，以及在这个过程中的角色")])]),v._v(" "),i("h2",{attrs:{id:"软实力"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#软实力"}},[v._v("#")]),v._v(" 软实力")]),v._v(" "),i("ul",[i("li",[v._v("说说你的亮点")]),v._v(" "),i("li",[v._v("说说你最近在看什么书")]),v._v(" "),i("li",[v._v("说说你觉得最有意义的技术书籍")]),v._v(" "),i("li",[v._v("工作之余做什么事情")]),v._v(" "),i("li",[v._v("说说个人发展方向方面的思考")]),v._v(" "),i("li",[v._v("说说你认为的服务端开发工程师应该具备哪些能力")]),v._v(" "),i("li",[v._v("说说你认为的架构师是什么样的，架构师主要做什么")]),v._v(" "),i("li",[v._v("说说你所理解的技术专家")])]),v._v(" "),i("h1",{attrs:{id:"hr-篇"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#hr-篇"}},[v._v("#")]),v._v(" HR 篇")]),v._v(" "),i("ul",[i("li",[v._v("你为什么离开之前的公司")]),v._v(" "),i("li",[v._v("你为什么要进我们公司")]),v._v(" "),i("li",[v._v("说说职业规划")]),v._v(" "),i("li",[v._v("你如何看待加班问题")]),v._v(" "),i("li",[v._v("谈一谈你的一次失败经历")]),v._v(" "),i("li",[v._v("你觉得你最大的优点是什么")]),v._v(" "),i("li",[v._v("你觉得你最大的缺点是什么")]),v._v(" "),i("li",[v._v("你在工作之余做什么事情")]),v._v(" "),i("li",[v._v("你为什么认为你适合这个职位")]),v._v(" "),i("li",[v._v("你觉得自己那方面能力最急需提高")]),v._v(" "),i("li",[v._v("你来我们公司最希望得到什么")]),v._v(" "),i("li",[v._v("你希望从这份工作中获得什么")]),v._v(" "),i("li",[v._v("你对现在应聘的职位有什么了解")]),v._v(" "),i("li",[v._v("您还有什么想问的")]),v._v(" "),i("li",[v._v("你怎么看待自己的职涯")]),v._v(" "),i("li",[v._v("谈谈你的家庭情况")]),v._v(" "),i("li",[v._v("你有什么业余爱好")]),v._v(" "),i("li",[v._v("你计划在公司工作多久")])]),v._v(" "),i("h2",{attrs:{id:"线程池相关"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#线程池相关"}},[v._v("#")]),v._v(" 线程池相关")]),v._v(" "),i("ul",[i("li",[v._v("单机上一个线程池正在处理服务，如果忽然断电了怎么办（正在处理和阻塞队列里的请求怎么处理）？")]),v._v(" "),i("li",[v._v("为什么要使用线程池？")]),v._v(" "),i("li",[v._v("线程池有什么作用？")]),v._v(" "),i("li",[v._v("说说几种常见的线程池及使用场景。")]),v._v(" "),i("li",[v._v("线程池都有哪几种工作队列？")]),v._v(" "),i("li",[v._v("怎么理解无界队列和有界队列？")]),v._v(" "),i("li",[v._v("线程池中的几种重要的参数及流程说明。")])]),v._v(" "),i("h2",{attrs:{id:"jvm相关"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#jvm相关"}},[v._v("#")]),v._v(" JVM相关")]),v._v(" "),i("ul",[i("li",[v._v("说一下对jvm的理解，jvm的组成部分，各个部分的存储内容以及常见的jvm的问题排查步骤。")]),v._v(" "),i("li",[v._v("对JVM熟不熟悉？简单说说类加载过程，里面执行的那些操作？")]),v._v(" "),i("li",[v._v("JVM方法区存储内容 是否会动态扩展 是否会出现内存溢出 出现的原因有哪些。")]),v._v(" "),i("li",[v._v("介绍介绍CMS。")]),v._v(" "),i("li",[v._v("介绍介绍G1。")]),v._v(" "),i("li",[v._v("为什么jdk8用metaspace数据结构用来替代perm？")]),v._v(" "),i("li",[v._v("简单谈谈堆外内存以及你的理解和认识。")]),v._v(" "),i("li",[v._v("JVM的内存模型的理解，threadlocal使用场景及注意事项？")]),v._v(" "),i("li",[v._v("JVM老年代和新生代的比例？")]),v._v(" "),i("li",[v._v("jstack,jmap,jutil分别的意义？如何线上排查JVM的相关问题？")]),v._v(" "),i("li",[v._v("Java虚拟机中，数据类型可以分为哪几类？")]),v._v(" "),i("li",[v._v("怎么理解栈、堆？堆中存什么？栈中存什么？")]),v._v(" "),i("li",[v._v("为什么要把堆和栈区分出来呢？栈中不是也可以存储数据吗？")]),v._v(" "),i("li",[v._v("在Java中，什么是是栈的起始点，同是也是程序的起始点？")]),v._v(" "),i("li",[v._v("为什么不把基本类型放堆中呢？")]),v._v(" "),i("li",[v._v("Java中的参数传递时传值呢？还是传引用？")]),v._v(" "),i("li",[v._v("Java中有没有指针的概念？")]),v._v(" "),i("li",[v._v("Java中，栈的大小通过什么参数来设置？")]),v._v(" "),i("li",[v._v("一个空Object对象的占多大空间？")]),v._v(" "),i("li",[v._v("对象引用类型分为哪几类？")]),v._v(" "),i("li",[v._v("讲一讲垃圾回收算法。")]),v._v(" "),i("li",[v._v("如何解决内存碎片的问题？")]),v._v(" "),i("li",[v._v("如何解决同时存在的对象创建和对象回收问题？")]),v._v(" "),i("li",[v._v("讲一讲内存分代及生命周期。")]),v._v(" "),i("li",[v._v("什么情况下触发垃圾回收？")]),v._v(" "),i("li",[v._v("如何选择合适的垃圾收集算法？")]),v._v(" "),i("li",[v._v("JVM中最大堆大小有没有限制？")]),v._v(" "),i("li",[v._v("堆大小通过什么参数设置？")]),v._v(" "),i("li",[v._v("JVM有哪三种垃圾回收器？")]),v._v(" "),i("li",[v._v("吞吐量优先选择什么垃圾回收器？响应时间优先呢？")]),v._v(" "),i("li",[v._v("如何进行JVM调优？有哪些方法？")]),v._v(" "),i("li",[v._v("如何理解内存泄漏问题？有哪些情况会导致内存泄露？如何解决？")])]),v._v(" "),i("h2",{attrs:{id:"阿里淘宝技术部"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#阿里淘宝技术部"}},[v._v("#")]),v._v(" 阿里淘宝技术部")]),v._v(" "),i("ol",[i("li",[v._v("介绍Redis分布式锁 Redis Zookeeper MySQL")]),v._v(" "),i("li",[v._v("介绍下策略模式，在你项目中如何用的，解决了什么问题")]),v._v(" "),i("li",[v._v("介绍下SpringBoot/SpringCloud")]),v._v(" "),i("li",[v._v("我看你用redis的list实现了一个简单的消息队列，如果你这个项目后期发展成一个庞大的电商项目，用户很多，你队列另一端消费者消费不完怎么办？队列满了怎么办？")]),v._v(" "),i("li",[v._v("消息队列了解哪些，能聊一聊么？disruptor单机性能最高的MQ, 600W QPS/sec")]),v._v(" "),i("li",[v._v("什么是内存泄漏？GC调优有经验么？一般出现GC问题你怎么解决 OOM Out Of Memory     Memory Leak")]),v._v(" "),i("li",[v._v("HashMap线程安全问题，然后谈了ConcurrentHashMap的相关问题。CAS AQS")]),v._v(" "),i("li",[v._v("Java中锁相关知识，synchronized和lock.")])]),v._v(" "),i("h2",{attrs:{id:"蘑菇街直播业务部"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#蘑菇街直播业务部"}},[v._v("#")]),v._v(" 蘑菇街直播业务部")]),v._v(" "),i("ol",[i("li",[v._v("EventLoopGroup bossGroup = new NioEventLoopGroup(2)数目设置的多大。如果你后期这个游戏发展的很大，用户量很多你怎么解决，这些值你怎么调优，或者你面对用户量大这个问题有什么解决办法。")]),v._v(" "),i("li",[v._v("如果你这个游戏，后期发展成那种开房间的模式，对假如的玩家权限鉴定，你准备在哪个环节处理，怎么处理？")]),v._v(" "),i("li",[v._v("拆包粘包问题怎么解决？")]),v._v(" "),i("li",[v._v("谈一谈这个项目中用到的handler?")]),v._v(" "),i("li",[v._v("Redis中Sorted sets底层数据结构知道吗？Redis主从知道吗？")]),v._v(" "),i("li",[v._v("SpringMVC中DispatcherServlet源码")]),v._v(" "),i("li",[v._v("SpringMVC中，前端传入一个假如name,你后端Controller如何接收到的？实现原理能说说吗？")])])])}),[],!1,null,null,null);_.default=a.exports}}]);